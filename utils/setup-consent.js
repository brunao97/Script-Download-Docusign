require('dotenv').config();

/**
 * Script para gerar URL de consentimento da aplica√ß√£o DocuSign
 * Conforme documenta√ß√£o: https://developers.docusign.com/platform/auth/jwt-get-token/
 * 
 * IMPORTANTE: Este passo deve ser executado ANTES de usar JWT Grant pela primeira vez
 */

function generateConsentURL() {
    console.log('üîê CONFIGURA√á√ÉO DE CONSENTIMENTO DA APLICA√á√ÉO DOCUSIGN');
    console.log('====================================================');
    console.log('Baseado na documenta√ß√£o: https://developers.docusign.com/platform/auth/jwt-get-token/\n');

    // Verificar configura√ß√µes obrigat√≥rias
    const integrationKey = process.env.DOCUSIGN_INTEGRATION_KEY;
    const basePath = process.env.DOCUSIGN_BASE_PATH || 'https://demo.docusign.net/restapi';

    if (!integrationKey) {
        console.error('‚ùå DOCUSIGN_INTEGRATION_KEY n√£o definida no arquivo .env');
        console.error('üí° Configure suas vari√°veis de ambiente primeiro');
        return null;
    }

    // Determinar ambiente e URLs baseadas no basePath
    const isDemoEnvironment = basePath.includes('demo');
    const authBaseURL = isDemoEnvironment 
        ? 'https://account-d.docusign.com/oauth/auth'
        : 'https://account.docusign.com/oauth/auth';

    const environment = isDemoEnvironment ? 'DEMO/SANDBOX' : 'PRODU√á√ÉO';

    console.log(`üåê Ambiente detectado: ${environment}`);
    console.log(`üîó Base URL de autentica√ß√£o: ${authBaseURL}`);
    console.log(`üîë Integration Key: ${integrationKey}\n`);

    // Par√¢metros para a URL de consentimento
    const redirectUri = 'https://developers.docusign.com/platform/auth/consent'; // URI padr√£o do DocuSign
    const scopes = 'signature impersonation'; // Escopos necess√°rios para JWT
    const responseType = 'code';

    // Construir URL de consentimento
    const consentParams = new URLSearchParams({
        response_type: responseType,
        scope: scopes,
        client_id: integrationKey,
        redirect_uri: redirectUri
    });

    const consentURL = `${authBaseURL}?${consentParams.toString()}`;

    console.log('üìã PAR√ÇMETROS DE CONSENTIMENTO:');
    console.log('==============================');
    console.log(`üéØ Response Type: ${responseType}`);
    console.log(`üîë Client ID (Integration Key): ${integrationKey}`);
    console.log(`üîÑ Redirect URI: ${redirectUri}`);
    console.log(`üé´ Scopes: ${scopes}`);
    console.log('');

    console.log('üåê URL DE CONSENTIMENTO GERADA:');
    console.log('===============================');
    console.log(consentURL);
    console.log('');

    console.log('üìã INSTRU√á√ïES PASSO A PASSO:');
    console.log('============================');
    console.log('1. üìã COPIE a URL acima');
    console.log('2. üåê ABRA a URL em seu navegador');
    console.log('3. üîê FA√áA LOGIN em sua conta DocuSign');
    console.log('4. ‚úÖ ACEITE o consentimento da aplica√ß√£o');
    console.log('5. ‚ö†Ô∏è  IGNORE a mensagem de erro "N√£o √© poss√≠vel carregar a p√°gina"');
    console.log('6. ‚úÖ FECHE a aba do navegador');
    console.log('7. üöÄ EXECUTE: npm run test-jwt');
    console.log('');

    console.log('‚ö†Ô∏è  IMPORTANTE:');
    console.log('===============');
    console.log('- Este consentimento precisa ser feito APENAS UMA VEZ por usu√°rio');
    console.log('- Ap√≥s dar o consentimento, voc√™ pode usar JWT Grant normalmente');
    console.log('- Se mudar de usu√°rio ou escopos, precisar√° repetir o processo');
    console.log('- A mensagem de erro no navegador √© NORMAL e pode ser ignorada');
    console.log('');

    return {
        consentURL,
        environment,
        integrationKey,
        redirectUri,
        scopes
    };
}

function checkConsentStatus() {
    console.log('üîç VERIFICANDO STATUS DO CONSENTIMENTO');
    console.log('=====================================');
    console.log('');
    console.log('Para verificar se o consentimento foi dado:');
    console.log('1. Execute: npm run test-jwt');
    console.log('2. Se der erro "consent_required", refa√ßa o consentimento');
    console.log('3. Se funcionar, o consentimento foi dado com sucesso');
    console.log('');
}

function showConsentHelp() {
    console.log('‚ùì AJUDA - CONSENTIMENTO DA APLICA√á√ÉO DOCUSIGN');
    console.log('==============================================');
    console.log('');
    console.log('üìö O que √© o consentimento?');
    console.log('   O consentimento permite que sua aplica√ß√£o "impersone" o usu√°rio');
    console.log('   e fa√ßa chamadas √† API em nome dele usando JWT Grant.');
    console.log('');
    console.log('üîÑ Quando preciso dar consentimento?');
    console.log('   - Primeira vez usando JWT com um usu√°rio');
    console.log('   - Mudan√ßa de escopos (permiss√µes)');
    console.log('   - Mudan√ßa de usu√°rio');
    console.log('');
    console.log('üåê Ambientes:');
    console.log('   - DEMO: https://account-d.docusign.com/oauth/auth');
    console.log('   - PRODU√á√ÉO: https://account.docusign.com/oauth/auth');
    console.log('');
    console.log('üõ†Ô∏è  Comandos √∫teis:');
    console.log('   npm run setup-consent        # Gera URL de consentimento');
    console.log('   npm run setup-consent check  # Verifica status');
    console.log('   npm run test-jwt             # Testa autentica√ß√£o');
    console.log('');
}

// Interface de linha de comando
if (require.main === module) {
    const args = process.argv.slice(2);
    const command = args[0];

    switch (command) {
        case 'check':
            checkConsentStatus();
            break;
        case 'help':
            showConsentHelp();
            break;
        default:
            const result = generateConsentURL();
            if (result) {
                console.log('üîó URL copiada para clipboard (se suportado)');
                
                // Tentar copiar para clipboard (opcional)
                try {
                    const { spawn } = require('child_process');
                    if (process.platform === 'win32') {
                        const clip = spawn('clip');
                        clip.stdin.write(result.consentURL);
                        clip.stdin.end();
                    }
                } catch (e) {
                    // Ignorar erro se n√£o conseguir copiar
                }
            }
            break;
    }
}

module.exports = {
    generateConsentURL,
    checkConsentStatus,
    showConsentHelp
}; 